max_obstacle_height: 3.0  # assume something like an arm is mounted on top of the robot

#robot_radius: 0.20  # distance a circular robot should be clear of the obstacle 
footprint: [[0.75, 0.4], [0.75, -0.4],[-0.4,-0.4],[-0.4,0.4]]  # if the robot is not circular

# map_type: costmap

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.6
  origin_z:             0.1
  z_resolution:         0.1
  z_voxels:             20
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 10.0
  raytrace_range: 10.0
  publish_voxel_map: false
  observation_sources: scan pscan #main_lidar_cloud
  scan:
    data_type: LaserScan
    topic: /scan
    sensor_frame: front_radar_link
    marking: true
    clearing: true
    min_obstacle_height: -0.05
    max_obstacle_height: 1.0
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  6.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.4  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
  
virtual_wall_layer:
  # The value for which a cost should be considered unknown when reading in a map from the map server. If the costmap is not tracking unknown space, costs of this value will be considered occupied. A value of zero also results in this parameter being unused. (int, default: -1)
  unknown_cost_value: -1

  # The threshold value at which to consider a cost lethal when reading in a map from the map server.(int, default: 100)
  lethal_cost_threshold: 100

  # The topic that the costmap subscribes to for the static map. This parameter is useful when you have multiple costmap instances within a single node that you want to use different static maps. (string, default: "map")
  map_topic: /virtual_wall_map

  # Only subscribe to the first message on the map topic, ignoring all subsequent messages (bool, default: false)
  first_map_only: false

  # In addition to map_topic, also subscribe to map_topic + "_updates" (bool, default: false)
  subscribe_to_updates: false

  # If true, unknown values in the map messages are translated directly to the layer. Otherwise, unknown values in the map message are translated as FREE_SPACE in the layer.  (bool, default: true)
  track_unknown_space: false

  # Only matters if the static layer is not the bottom layer. If true, only the maximum value will be written to the master costmap. (bool, default: false)
  use_maximum: true

  # If true, translates all map message values to NO_INFORMATION/FREE_SPACE/LETHAL_OBSTACLE (three values). If false, a full spectrum of intermediate values is possible. (bool, default: true)
  trinary_costmap: true
  
